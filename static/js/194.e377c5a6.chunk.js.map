{"version":3,"file":"static/js/194.e377c5a6.chunk.js","mappings":"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","sources":["webpack://careertest-ai/./src/components/careerPedias/CareerPedia.module.scss?bde3","components/careerPedias/CareerPedia.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"CareerPedia_wrapper__WiVhY\",\"main_container\":\"CareerPedia_main_container__p+Hj0\",\"first_part\":\"CareerPedia_first_part__RCIGs\",\"text_section\":\"CareerPedia_text_section__lyZE0\",\"search_section\":\"CareerPedia_search_section__fY8cf\",\"search_container\":\"CareerPedia_search_container__xbQig\",\"search_button\":\"CareerPedia_search_button__o4tM0\",\"searchIcon\":\"CareerPedia_searchIcon__fnPAP\",\"options\":\"CareerPedia_options__9tr3P\",\"second_part\":\"CareerPedia_second_part__e7fIP\",\"blogGrid\":\"CareerPedia_blogGrid__XfbA2\",\"article_cards\":\"CareerPedia_article_cards__HRosm\",\"article_card\":\"CareerPedia_article_card__GENHZ\",\"card_details\":\"CareerPedia_card_details__aSc1X\",\"authorSection\":\"CareerPedia_authorSection__e0EZQ\",\"authorPhoto\":\"CareerPedia_authorPhoto__o0d8d\",\"groupAuthorNameSection\":\"CareerPedia_groupAuthorNameSection__gzCRy\",\"date\":\"CareerPedia_date__HkbVY\",\"authorName\":\"CareerPedia_authorName__l1ovI\",\"verified\":\"CareerPedia_verified__FyBvD\",\"icons\":\"CareerPedia_icons__G3ESJ\",\"more\":\"CareerPedia_more__kbHUW\",\"More\":\"CareerPedia_More__7o5Ic\",\"getTouch\":\"CareerPedia_getTouch__p5LT-\",\"wave_svg\":\"CareerPedia_wave_svg__fhGu2\",\"group\":\"CareerPedia_group__4bZMB\",\"textempower\":\"CareerPedia_textempower__raPx2\",\"textjoin\":\"CareerPedia_textjoin__fVoD8\",\"card\":\"CareerPedia_card__SqSY6\",\"cardnamediv\":\"CareerPedia_cardnamediv__hiRIE\"};","import Grid from \"@material-ui/core/Grid\";\nimport axios from \"axios\";\nimport Footer from \"components/footer/Footer\";\nimport Navbar from \"components/navbar/Navbar\";\nimport WithPadding from \"components/shared/WithPadding\";\nimport config from \"config/config\";\nimport moment from \"moment\";\nimport { useEffect, useState } from \"react\";\nimport { IoIosSearch } from \"react-icons/io\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport SwiperCore, { Autoplay, Pagination } from \"swiper/core\";\nimport { getRequest, postRequest } from \"utils/api\";\nimport verified from \"../../assets/images/main/Icon.svg\";\nimport BlogPreview from \"./BlogPreview\";\nimport style from \"./CareerPedia.module.scss\";\n\nSwiperCore.use([Pagination, Autoplay]);\n\nexport default function CareerPedia() {\n  const navigateTo = useNavigate();\n\n  const [blogs, setBlogs] = useState([]);\n  const [categories, setCategories] = useState([]);\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [search, setSearch] = useState(\"\");\n\n  const [formData, setFormData] = useState({ email: \"\" });\n\n  async function fetchBlogs(category, search) {\n    setIsLoading(true);\n\n    const params = {};\n\n    if (category && category !== \"all\") {\n      params.category = category;\n    }\n\n    if (search && search !== \"\") {\n      params.search = search;\n    }\n\n    try {\n      const res = await axios.get(`${config.apiBaseUrl}/web/blogs`, { params });\n      setBlogs(res.data);\n    } catch {\n    } finally {\n      setIsLoading(false);\n    }\n  }\n\n  function fetchCategories() {\n    getRequest(`/web/blog-categories`, { noAuth: true })\n      .then((resp) => {\n        setCategories(resp.data);\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }\n\n  async function handleGetStarted() {\n    const { email } = formData;\n\n    postRequest(\n      \"/web/subscriptions\",\n      {\n        email,\n      },\n      { noAuth: true },\n    )\n      .then(() => {\n        navigateTo(`/auth/register?email=${email}`);\n      })\n      .catch((e) => {\n        console.error(e);\n      });\n  }\n\n  useEffect(() => {\n    fetchCategories();\n  }, []);\n\n  useEffect(() => {\n    fetchBlogs(selectedCategory, search);\n  }, [selectedCategory]);\n\n  return (\n    <div className={style.wrapper}>\n      <Navbar background={\"white\"} />\n\n      <WithPadding className={style.main_container}>\n        <div className={style.first_part}>\n          <div className={style.text_section}>\n            <span>\n              CareerPedia: Navigate <br /> Your Career Path\n            </span>\n            <p>\n              Explore expert insights tailored for every step of your\n              professional voyage.\n            </p>\n          </div>\n          <div className={style.search_section}>\n            <div className={style.search_container}>\n              <IoIosSearch className={style.searchIcon} />\n\n              <input\n                className={style.search_input}\n                type=\"text\"\n                placeholder=\"Search Article\"\n                value={search}\n                onChange={(e) => setSearch(e.target.value)}\n              />\n\n              <button\n                className={style.search_button}\n                onClick={() => fetchBlogs(selectedCategory, search)}\n              >\n                Search\n              </button>\n            </div>\n          </div>\n          <div className={style.options}>\n            <p>Categories:</p>\n            <div onClick={() => setSelectedCategory(\"all\")}>All</div>\n            {categories.map((item) => (\n              <div key={item.id} onClick={() => setSelectedCategory(item.id)}>\n                {item.name}\n              </div>\n            ))}\n          </div>\n        </div>\n      </WithPadding>\n\n      <WithPadding className={style.second_part}>\n        <Grid container spacing={3} className={style.blogGrid}>\n          {isLoading ? (\n            <p>Loading...</p>\n          ) : (\n            blogs.map((blog, index) => (\n              <Grid item xs={12} sm={4}>\n                <div key={index} className={style.article_cards}>\n                  <Link to={`/article/${blog.slug}`} className={style.article_card}>\n                    <img src={blog.image} alt=\"\" />\n                    <div className={style.card_details}>\n                      <h2>{blog.title}</h2>\n                      <p>{blog.summary}</p>\n                      <div className={style.authorSection}>\n                        <img\n                          src={blog.author.photo}\n                          alt={`Author:\"`}\n                          className={style.authorPhoto}\n                        />\n                        <div className={style.groupAuthorNameSection}>\n                          <div>\n                            <p className={style.authorName}>{blog.author.name}</p>\n                            <span className={style.verified}>\n                              {\" \"}\n                              <img\n                                src={verified}\n                                className={style.icons}\n                                alt=\"images\"\n                              />{\" \"}\n                              Verified Writer\n                            </span>\n                          </div>\n                          <div className={style.date}>\n                            <p>{moment(blog.date).format(\"DD MMM\")}</p>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </Link>\n                </div>\n              </Grid>\n            ))\n          )}\n        </Grid>\n      </WithPadding>\n\n      <BlogPreview />\n\n      <Footer />\n    </div>\n  );\n}\n"],"names":["CareerPedia","useNavigate","blogs","setBlogs","useState","categories","setCategories","isLoading","setIsLoading","selectedCategory","setSelectedCategory","search","setSearch","formData","setFormData","email","async","fetchBlogs","category","params","res","axios","concat","config","apiBaseUrl","data","useEffect","getRequest","noAuth","then","resp","catch","err","console","error","_jsxs","className","style","wrapper","children","_jsx","Navbar","background","WithPadding","main_container","first_part","text_section","search_section","search_container","IoIosSearch","searchIcon","search_input","type","placeholder","value","onChange","e","target","search_button","onClick","options","map","item","id","name","second_part","Grid","container","spacing","blogGrid","blog","index","xs","sm","article_cards","Link","to","slug","article_card","src","image","alt","card_details","title","summary","authorSection","author","photo","authorPhoto","groupAuthorNameSection","authorName","verified","icons","date","moment","format","BlogPreview","Footer","SwiperCore","use","Pagination","Autoplay"],"sourceRoot":""}