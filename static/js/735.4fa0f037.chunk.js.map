{"version":3,"file":"static/js/735.4fa0f037.chunk.js","mappings":"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","sources":["webpack://careertest-ai/./src/components/shared/Checkbox.module.scss?a070","components/shared/Checkbox.js","webpack://careertest-ai/./src/components/auth/Login.module.scss?2fb9","components/auth/Login.js","webpack://careertest-ai/./src/components/auth/Register.module.scss?11ac","components/auth/Register.js","webpack://careertest-ai/./src/components/auth/ForgotPassword.module.scss?0b85","components/auth/ForgotPassword.js","webpack://careertest-ai/./src/components/auth/NewCandidate.module.scss?79af","components/auth/NewCandidate.js","webpack://careertest-ai/./src/components/auth/CustomLogin.module.scss?1168","components/auth/CustomLogin.js","components/auth/AuthRouter.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Checkbox_wrapper__zqi2i\",\"label\":\"Checkbox_label__SqWat\",\"checkmark\":\"Checkbox_checkmark__vP8+T\"};","import style from \"./Checkbox.module.scss\";\n\nexport default function Checkbox({ name, label, fontColor, radius, value }) {\n  return (\n    <label className={style.wrapper} style={{ color: fontColor }}>\n      <span className={style.label}>{label}</span>\n      <input name={name ? name : \"\"} type=\"checkbox\" value={true} />\n      <span\n        className={style.checkmark}\n        style={radius ? { borderRadius: radius } : {}}\n      ></span>\n    </label>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Login_wrapper__yYPRE\",\"inner\":\"Login_inner__G5RQ+\",\"left\":\"Login_left__stFC7\",\"right\":\"Login_right__Lj-R8\",\"registerButton\":\"Login_registerButton__jzEV8\",\"text\":\"Login_text__Mf-j+\",\"textGroup\":\"Login_textGroup__FWz5Y\",\"checkboxContainer\":\"Login_checkboxContainer__9fs-N\",\"link\":\"Login_link__Hxrcf\",\"usernameError\":\"Login_usernameError__EhWGv\"};","import LoginImg from \"assets/images/auth/login.png\";\nimport clsx from \"clsx\";\nimport Button from \"components/shared/Button\";\nimport Checkbox from \"components/shared/Checkbox\";\nimport InlineLoader from \"components/shared/InlineLoader\";\nimport TextField from \"components/shared/formik/TextField\";\nimport { useUserContext } from \"contexts/AllContexts\";\nimport { Formik } from \"formik\";\nimport { useState } from \"react\";\nimport { Eye, EyeOff } from \"react-feather\";\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\nimport { getRequest, postRequest } from \"utils/api\";\nimport * as yup from \"yup\";\nimport style from \"./Login.module.scss\";\n\nexport default function Login() {\n  const [formData, setFormData] = useState({});\n  const [isRemember, setIsRemember] = useState(false);\n  const [isIncorrectCreds, setIsIncorrectCreds] = useState(false);\n  const [passwordType, setPasswordType] = useState(\"password\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [isErrorUsername, setIsErrorUsername] = useState(false);\n\n  const userContext = useUserContext();\n  const navigate = useNavigate();\n\n  const [searchParams] = useSearchParams();\n\n  function handleClickRegister() {\n    navigate(\"/auth/register\");\n  }\n  function handleForgotPassword() {\n    navigate(\"/auth/forgotpassword\");\n  }\n\n  function changeFormData(e) {\n    let { name, value } = e.target;\n\n    if (name === \"rememberMe\") setIsRemember(e.target.checked);\n    else {\n      if (name === \"username\") {\n        setIsErrorUsername(false);\n        value = value.replace(/\\s/g, \"\");\n        /* value = value.replace(/_/g, \"\").substring(3); */\n      }\n\n      setFormData((prev) => ({ ...prev, [name]: value }));\n    }\n  }\n\n  const validationSchema = yup.object().shape({\n    password: yup.string().required(\"* Password is required\"),\n  });\n\n  function handleClickEye() {\n    setPasswordType((prev) => (prev === \"password\" ? \"text\" : \"password\"));\n  }\n\n  function submitForm() {\n    const emailPattern = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\n    if (!emailPattern.test(formData.username)) {\n      return setIsErrorUsername(true);\n    }\n\n    setIsIncorrectCreds(false);\n    setIsLoading(true);\n\n    postRequest(\"/accounts/login\", formData, { noAuth: true })\n      .then((resp) => {\n        if (isRemember) {\n          localStorage.setItem(\"accessToken\", resp.data.access);\n          localStorage.setItem(\"refreshToken\", resp.data.refresh);\n        } else {\n          sessionStorage.setItem(\"accessToken\", resp.data.access);\n          sessionStorage.setItem(\"refreshToken\", resp.data.refresh);\n        }\n\n        getRequest(`/accounts/profile`)\n          .then((resp) => {\n            userContext.getProfile();\n\n            if (searchParams.get(\"to\")) {\n              return (window.location.href = `/${searchParams.get(\"to\")}`);\n            } else {\n              return navigate(\"/dashboard\");\n            }\n          })\n          .catch((err) => {\n            console.log(err);\n          })\n          .finally(() => {\n            setIsLoading(false);\n          });\n      })\n      .catch((err) => {\n        console.log(err);\n\n        if (err.response.status === 401) {\n          setIsIncorrectCreds(true);\n          setIsLoading(false);\n        }\n      })\n      .finally(() => { });\n  }\n\n  const [isOpenForgetPassModal, setIsOpenForgetPassModal] = useState(false);\n  function toggleForgetPassModal() {\n    setIsOpenForgetPassModal((prev) => !prev);\n  }\n\n  const [emailForgotPass, setEmailForgotPass] = useState(\"\");\n  const [errorEmailForgotPass, setErrorEmailForgotPass] = useState(\"\");\n  const [apiResponseForgotPass, setApiResponseForgotPass] = useState({\n    isActive: false,\n    isError: false,\n    message: \"\",\n  });\n  function handleChangeFormForgotPass(e) {\n    const { value } = e.target;\n    setEmailForgotPass(value);\n  }\n\n  function handleSubmitFormForgotPass(e) {\n    e.preventDefault();\n    const validationSchema = yup.object().shape({\n      email: yup\n        .string()\n        .email(\"*Must be a valid email\")\n        .max(255)\n        .required(\"*Email is required\"),\n    });\n\n    try {\n      validationSchema.validateSync(\n        { email: emailForgotPass },\n        { abortEarly: false },\n      );\n      setIsLoading(true);\n      setErrorEmailForgotPass({});\n      setApiResponseForgotPass({\n        isActive: false,\n        isError: false,\n        message: \"\",\n      });\n      setErrorEmailForgotPass({});\n\n      postRequest(\n        `/accounts/forgot_password`,\n        { email: emailForgotPass },\n        { noAuth: true },\n      )\n        .then((resp) => {\n          if (resp.data.status) {\n            setApiResponseForgotPass({\n              isActive: true,\n              isError: false,\n              message: \"A new password has been sent to you email.\",\n            });\n          } else {\n            setApiResponseForgotPass({\n              isActive: true,\n              isError: true,\n              message: \"No account found with given email id.\",\n            });\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          setApiResponseForgotPass({\n            isActive: true,\n            isError: true,\n            message: \"An error occured. Please try again\",\n          });\n        })\n        .finally(() => {\n          setIsLoading(false);\n        });\n    } catch (err) {\n      let errs = {};\n\n      err.inner.forEach((er) => {\n        errs[er.path] = er;\n      });\n\n      console.log(err);\n      setErrorEmailForgotPass(errs);\n    }\n  }\n\n  return (\n    <div className={style.wrapper}>\n      <div className={style.inner}>\n        <div className={style.left}>\n          <img src={LoginImg} alt=\"\" />\n        </div>\n        <div className={style.right}>\n          <div className={style.headerContainer}>\n            <div className={style.registerButton}>\n              New User? &nbsp; &nbsp;\n              <span onClick={handleClickRegister}>Create an Account</span>\n            </div>\n            <div className={style.text}>Login</div>\n          </div>\n\n          <Formik initialValues={{ username: \"\", password: \"\" }} validationSchema={validationSchema} onSubmit={submitForm}>\n            {({ handleSubmit }) => (\n              <form onChange={changeFormData} onSubmit={handleSubmit}>\n\n                <div className={style.textGroup}>\n                  <div className={style.row}>\n                    <label htmlFor=\"username\" className={style.label}>\n                      Your Email\n                    </label>\n\n                    <TextField\n                      className={style.textField}\n                      name=\"username\"\n                      label=\"Username\"\n                      placeholder=\"tony@example.com\"\n                      type=\"email\"\n                    />\n                  </div>\n                  {isErrorUsername && (\n                    <div className={clsx(style.error, style.usernameError)}>\n                      *Enter Valid Username\n                    </div>\n                  )}\n\n                  <div className={style.row}>\n                    <label htmlFor=\"password\" className={style.label}>\n                      Password\n                    </label>\n\n                    {passwordType == \"text\" ? (\n                      <Eye onClick={handleClickEye} color=\"#C0BDCC\" />\n                    ) : (\n                      <EyeOff color=\"#C0BDCC\" onClick={handleClickEye} />\n                    )}\n                    <TextField\n                      className={style.textField}\n                      type={passwordType}\n                      name=\"password\"\n                      label=\"User Id\"\n                      placeholder=\"Password\"\n                    />\n                  </div>\n                </div>\n\n                {isIncorrectCreds && (\n                  <div className={style.incorrectCreds}>Incorrect Credentials</div>\n                )}\n\n                <div className={style.textGroup}>\n                  <div className={style.checkboxContainer}>\n                    <Checkbox name=\"rememberMe\" label=\"Remember me\" fontColor=\"#969696\" />\n                    <div onClick={handleForgotPassword} className={style.link}>Forgot Password ?</div>\n                  </div>\n                </div>\n\n                <div className={style.textGroup}>\n                  <div className={style.btnContainer}>\n                    <Button submit disabled={isLoading} options={{ width: \"299px\", height: \"55px\", borderRadius: \"60px\" }}>\n                      {isLoading ? (\n                        <InlineLoader size={20} color=\"white\" />) : (\"Login\")}\n                    </Button>\n                  </div>\n                </div>\n              </form>\n            )}\n          </Formik>\n        </div>\n      </div>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Register_wrapper__z0cxS\",\"textField\":\"Register_textField__Xdo1C\",\"checkbox\":\"Register_checkbox__8Wj8d\",\"selectField\":\"Register_selectField__urwsB\",\"mainCard\":\"Register_mainCard__-GE12\",\"left\":\"Register_left__zGiAZ\",\"right\":\"Register_right__ecgj8\",\"alreadyRegistered\":\"Register_alreadyRegistered__cOWAR\",\"welcome\":\"Register_welcome__TNN4t\",\"title\":\"Register_title__QTa8E\",\"logo\":\"Register_logo__9-cer\",\"image\":\"Register_image__JH4jm\",\"error\":\"Register_error__WUxbK\",\"deptError\":\"Register_deptError__rAmSl\",\"usernameError\":\"Register_usernameError__S1pOg\",\"selectors\":\"Register_selectors__bGpIg\",\"selectorPair\":\"Register_selectorPair__HXvZK\",\"selector\":\"Register_selector__rOtK1\",\"name\":\"Register_name__LDCjB\",\"selector1\":\"Register_selector1__OA2SP\",\"selector2\":\"Register_selector2__DWN+g\",\"selector3\":\"Register_selector3__1H3MK\",\"errors\":\"Register_errors__5HTmI\",\"textGroup\":\"Register_textGroup__rgAYF\",\"agreeText\":\"Register_agreeText__pcz9h\",\"row\":\"Register_row__+VSQP\",\"firstName\":\"Register_firstName__srp15\",\"row1\":\"Register_row1__lVSXb\",\"checkboxContainer\":\"Register_checkboxContainer__M4p6q\",\"btnContainer\":\"Register_btnContainer__X8or5\",\"Button\":\"Register_Button__79yyr\"};","import Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport RegisterImg from \"assets/images/auth/register.png\";\nimport clsx from \"clsx\";\nimport Button from \"components/shared/Button\";\nimport InlineLoader from \"components/shared/InlineLoader\";\nimport TextField from \"components/shared/formik/TextField\";\nimport { Formik } from \"formik\";\nimport { useState } from \"react\";\nimport { Eye, EyeOff } from \"react-feather\";\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\nimport { postRequest } from \"utils/api\";\nimport * as yup from \"yup\";\nimport style from \"./Register.module.scss\";\n\nconst _ArrSelectors = [\n  { name: \"Rise\", title: \"High School Students\" },\n  { name: \"Sail\", title: \"College Students & Graduates\" },\n  { name: \"Redesign\", title: \"Working Professionals\" },\n];\n\nconst _ArrLangs = [\n  { label: \"English\", value: \"EN\" },\n];\n\nconst radioSize = \"18px\";\n\nfunction getDepartment(dept) {\n  switch (dept) {\n    case \"Rise\":\n      return \"RISE\";\n    case \"Sail\":\n      return \"SAIL\";\n    case \"Redesign\":\n      return \"REDESIGN\";\n    default:\n      return \"\";\n  }\n}\n\nexport default function Register() {\n  const [searchParams] = useSearchParams();\n  const preEmail = searchParams.get(\"email\");\n\n  const [selected, setSelected] = useState(\"\");\n  const themePurple =\n    selected == \"Rise\"\n      ? \"rgba(0, 215, 151, 1)\"\n      : selected == \"Sail\"\n        ? \"rgba(145, 61, 237, 1)\"\n        : selected == \"Redesign\"\n          ? \"rgba(237, 213, 61, 1)\"\n          : \"\";\n\n  const CustomRadio = withStyles({\n    root: {\n      color: \"grey\",\n      \"&$checked\": {\n        color: themePurple,\n      },\n      \"& svg\": {\n        width: radioSize,\n        height: radioSize,\n      },\n      \"&$disabled\": {\n        color: \"#3D92ED\",\n      },\n    },\n    checked: {},\n    disabled: {},\n  })((props) => <Radio {...props} />);\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirmPass, setShowConfirmPass] = useState(false);\n  const [isErrorDept, setIsErrorDept] = useState(false);\n  const [isErrorUsername, setIsErrorUsername] = useState(false);\n  const [isErrorLang, setIsErrorLang] = useState(false);\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [postErrors, setPostErrors] = useState({});\n\n  const [formData, setFormData] = useState({\n    full_name: \"\",\n    email: preEmail || \"\",\n    password: \"\",\n    confirm_password: \"\",\n    pref_lang: \"EN\",\n  });\n\n  const navigate = useNavigate();\n\n  function toggleShowPassword() {\n    setShowPassword((prev) => !prev);\n  }\n\n  function toggleShowConfirmPass() {\n    setShowConfirmPass((prev) => !prev);\n  }\n\n  function handleNavigateLogin() {\n    navigate(\"/auth/login\");\n  }\n\n  function handleChangeRadioSelect(e) {\n    setIsErrorDept(false);\n    setSelected(e.target.value);\n  }\n\n  function handleChange(e) {\n    setPostErrors([]);\n    setIsErrorLang(false);\n\n    const { name } = e.target;\n    let { value } = e.target;\n\n    if (name === \"username\") {\n      setIsErrorUsername(false);\n      value = value.replace(/\\s/g, \"\");\n      /* value = value.replace(/_/g, \"\").substring(3); */\n    }\n    setFormData((prev) => ({ ...prev, [name]: value }));\n  }\n\n  function submitForm() {\n    if (!selected.length) return setIsErrorDept(true);\n\n    if (!formData.pref_lang || formData.pref_lang.length <= 0) {\n      return setIsErrorLang(true);\n    }\n\n    const { full_name, email, password, confirm_password } = formData;\n\n    const [first_name, last_name] = full_name.split(\" \");\n\n    const postData = {\n      username: email,\n      email: email,\n      first_name,\n      last_name: last_name || \"\",\n      password: password,\n      password2: confirm_password,\n      department: getDepartment(selected),\n      pref_language: formData.pref_lang,\n    };\n\n    setIsLoading(true);\n    postRequest(`/accounts/register`, postData, { noAuth: true })\n      .then((resp) => {\n        postRequest(\"/token\", {\n          username: postData.username,\n          password: postData.password,\n        })\n          .then((resp) => {\n            localStorage.setItem(\"accessToken\", resp.data.access);\n            localStorage.setItem(\"refreshToken\", resp.data.refresh);\n\n            window.location.href = \"/dashboard/candidate/assessment\";\n          })\n          .catch((err) => {\n            console.error(err);\n          });\n      })\n      .catch((err) => {\n        console.error(err);\n        setPostErrors(err.response.data);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }\n\n  const validationSchema = yup.object().shape({\n    email: yup\n      .string()\n      .email(\"Must be a valid email\")\n      .max(255)\n      .required(\"Email is required\"),\n    full_name: yup.string().required(\"Name is requried\"),\n    password: yup.string().min(8).required(\"Password required\"),\n    confirm_password: yup\n      .string()\n      .oneOf([yup.ref(\"password\"), null], \"Passwords must match\")\n      .required(\"Required\"),\n  });\n\n  return (\n    <div className={style.wrapper}>\n      <div className={style.mainCard}>\n        <div className={style.left}>\n          <img src={RegisterImg} alt=\"\" />\n        </div>\n        <div className={style.right}>\n          <div className={style.alreadyRegistered}>\n            Already registered ?{\" \"}\n            <span onClick={handleNavigateLogin}>Login</span>\n          </div>\n\n          <div className={style.welcome}>\n            <div className={style.title}>Create Your Account</div>\n          </div>\n\n          <div>\n            {isErrorDept && (\n              <div className={clsx(style.error, style.deptError)}>\n                Choose your Category\n              </div>\n            )}\n          </div>\n\n          <Formik initialValues={formData} onSubmit={submitForm} validationSchema={validationSchema}>\n            {({ values, errors, touched, handleBlur, handleSubmit }) => (\n              <form onSubmit={handleSubmit} onChange={handleChange}>\n                <div className={style.textGroup}>\n\n                  <div className={style.row}>\n                    <label htmlFor=\"username\">Full Name</label>\n                    <TextField className={clsx(style.textField, style.firstName)} type=\"text\" name=\"full_name\" label=\"Name\" placeholder=\"Name\" value={formData.name} />\n                  </div>\n\n                  <div className={style.row}>\n                    <label htmlFor=\"username\">Your Email</label>\n                    <TextField className={style.textField} type=\"email\" value={formData.email} name=\"email\" label=\"Email\" placeholder=\"Email\" />\n                    {isErrorUsername && (<div className={clsx(style.error, style.usernameError)}>Enter Valid Email as your username</div>)}\n                    {postErrors.username && (<div className={style.errors}> {postErrors.username.map((err) => (<div className={style.error}>{err.toLowerCase()}</div>))} </div>)}\n                  </div>\n\n                </div>\n\n                <div className={style.textGroup}>\n\n                  <div className={style.row1}>\n                    <label htmlFor=\"username\">Password</label>\n                    {showPassword ? (<Eye onClick={toggleShowPassword} className={style.svg1} />) : (<EyeOff onClick={toggleShowPassword} className={style.svg1} />)}\n                    <TextField className={style.textField} type={showPassword ? \"text\" : \"password\"} name=\"password\" label=\"Password\" placeholder=\"Password\" value={formData.password} />\n                  </div>\n\n                  {postErrors.password && (\n                    <div className={style.errors}>\n                      {postErrors.password.map((err) => (\n                        <div className={style.error}>{err.toLowerCase()}</div>\n                      ))}\n                    </div>\n                  )}\n\n                  <div className={style.row1}>\n                    {showConfirmPass ? (\n                      <Eye\n                        onClick={toggleShowConfirmPass}\n                        className={style.svg2}\n                      />\n                    ) : (\n                      <EyeOff\n                        onClick={toggleShowConfirmPass}\n                        className={style.svg2}\n                      />\n                    )}\n                    <label htmlFor=\"username\">Confirm Password</label>\n                    <TextField className={style.textField} type={showConfirmPass ? \"text\" : \"password\"} name=\"confirm_password\" label=\"Confirm Password\" placeholder=\"Confirm Password\" />\n                  </div>\n                </div>\n\n\n                <label>Select Your Career Stage</label>\n\n                <div>\n                  <RadioGroup\n                    aria-label=\"answer\"\n                    name=\"answer\"\n                    value={\"Lorem\"}\n                    onChange={handleChangeRadioSelect}\n                    className={style.selectors}\n                  >\n                    {_ArrSelectors.map((sel, index) => (\n                      <div\n                        key={index}\n                        className={\n                          selected == \"Rise\" && sel.name == \"Rise\"\n                            ? style.selector1\n                            : selected == \"Sail\" && sel.name == \"Sail\"\n                              ? style.selector2\n                              : selected == \"Redesign\" && sel.name == \"Redesign\"\n                                ? style.selector3\n                                : style.selector\n                        }\n                        onClick={() => setSelected(sel.name)}\n                      >\n                        <div className={style.name}>\n                          <CustomRadio\n                            value={sel.name}\n                            checked={selected === sel.name}\n                          />\n                          {sel.name}\n                        </div>\n                        <div className={style.body}>\n                          <div className={style.title}>{sel.title}</div>\n                          <div className={style.checkbox}></div>\n                        </div>\n                      </div>\n                    ))}\n                  </RadioGroup>\n                  {isErrorDept && (\n                    <div className={clsx(style.error, style.deptError)}>\n                      Choose your Category\n                    </div>\n                  )}\n                </div>\n                <div className={style.agreeText}>\n                  By signing up, I agree to CareerTest.ai’s{\" \"}\n                  <span onClick={() => navigate(\"/t&c\")}>\n                    Terms & Conditions\n                  </span>{\" \"}\n                  and{\" \"}\n                  <span onClick={() => navigate(\"/privacy-policy\")}>\n                    Privacy Policy\n                  </span>\n                  .\n                </div>\n                <div className={style.btnContainer}>\n\n                  <Button\n                    submit\n                    options={{ width: \"299px\", height: \"55px\", radius: \"20px\" }}\n                    className={style.Button}\n                  >\n                    {isLoading ? (\n                      <InlineLoader size={20} color=\"white\" />\n                    ) : (\n                      \"Start Assessment\"\n                    )}\n                  </Button>\n                </div>\n              </form>\n            )}\n          </Formik>\n        </div>\n      </div>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"ForgotPassword_wrapper__dqazv\",\"inner\":\"ForgotPassword_inner__xSpgy\",\"left\":\"ForgotPassword_left__i6ia5\",\"right\":\"ForgotPassword_right__UfqYi\",\"registerButton\":\"ForgotPassword_registerButton__v0UTQ\",\"text\":\"ForgotPassword_text__7x0GG\",\"subtext\":\"ForgotPassword_subtext__0OZHN\",\"textGroup\":\"ForgotPassword_textGroup__vVcpc\",\"checkboxContainer\":\"ForgotPassword_checkboxContainer__9yY-6\",\"link\":\"ForgotPassword_link__FO7P+\",\"usernameError\":\"ForgotPassword_usernameError__QTZyi\"};","import { InputLabel } from \"@material-ui/core\";\nimport LoginImg from \"assets/images/auth/forgott.png\";\nimport clsx from \"clsx\";\nimport Button from \"components/shared/Button\";\nimport InlineLoader from \"components/shared/InlineLoader\";\nimport TextField from \"components/shared/formik/TextField\";\nimport { useUserContext } from \"contexts/AllContexts\";\nimport { Formik } from \"formik\";\nimport { useState } from \"react\";\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { postRequest } from \"utils/api\";\nimport * as yup from \"yup\";\nimport style from \"./ForgotPassword.module.scss\";\n\nexport default function ForgotPassword() {\n  const [formData, setFormData] = useState({});\n  const [isRemember, setIsRemember] = useState(false);\n  const [isIncorrectCreds, setIsIncorrectCreds] = useState(false);\n  const [passwordType, setPasswordType] = useState(\"password\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [isErrorUsername, setIsErrorUsername] = useState(false);\n\n  const userContext = useUserContext();\n  const navigate = useNavigate();\n\n  const [searchParams] = useSearchParams();\n\n  function handleClickLogin() {\n    navigate(\"/auth/login\");\n  }\n\n  function changeFormData(e) {\n    let { name, value } = e.target;\n\n    if (name === \"rememberMe\") setIsRemember(e.target.checked);\n    else {\n      if (name === \"username\") {\n        setIsErrorUsername(false);\n        value = value.replace(/\\s/g, \"\");\n      }\n\n      setFormData((prev) => ({ ...prev, [name]: value }));\n    }\n  }\n\n  const validationSchema = yup.object().shape({\n    email: yup.string().email().required(\"Please enter your registered email!\"),\n  });\n\n  function handleClickEye() {\n    setPasswordType((prev) => (prev === \"password\" ? \"text\" : \"password\"));\n  }\n\n  function submitForm(values) {\n    setIsLoading(true);\n\n    postRequest(\n      \"/accounts/forgot_password\",\n      { email: values.email },\n      { noAuth: true },\n    )\n      .then((res) => {\n        toast.success(\n          \"Success! Your new password has been sent to your email.\",\n          { icon: false },\n        );\n        navigate(\"/auth/login\");\n      })\n      .catch((err) => {\n        console.error(err);\n        toast.error(\"Something went wrong! Please try again.\", { icon: false });\n      })\n      .finally(() => setIsLoading(false));\n  }\n\n  const [isOpenForgetPassModal, setIsOpenForgetPassModal] = useState(false);\n  function toggleForgetPassModal() {\n    setIsOpenForgetPassModal((prev) => !prev);\n  }\n\n  const [emailForgotPass, setEmailForgotPass] = useState(\"\");\n  const [errorEmailForgotPass, setErrorEmailForgotPass] = useState(\"\");\n  const [apiResponseForgotPass, setApiResponseForgotPass] = useState({\n    isActive: false,\n    isError: false,\n    message: \"\",\n  });\n\n  function handleChangeFormForgotPass(e) {\n    const { value } = e.target;\n    setEmailForgotPass(value);\n  }\n\n  function handleSubmitFormForgotPass(e) {\n    e.preventDefault();\n    const validationSchema = yup.object().shape({\n      email: yup\n        .string()\n        .email(\"*Must be a valid email\")\n        .max(255)\n        .required(\"*Email is required\"),\n    });\n\n    try {\n      validationSchema.validateSync(\n        { email: emailForgotPass },\n        { abortEarly: false },\n      );\n      setIsLoading(true);\n      setErrorEmailForgotPass({});\n      setApiResponseForgotPass({\n        isActive: false,\n        isError: false,\n        message: \"\",\n      });\n      setErrorEmailForgotPass({});\n\n      postRequest(\n        `/accounts/forgot_password`,\n        { email: emailForgotPass },\n        { noAuth: true },\n      )\n        .then((resp) => {\n          if (resp.data.status) {\n            setApiResponseForgotPass({\n              isActive: true,\n              isError: false,\n              message: \"A new password has been sent to you email.\",\n            });\n          } else {\n            setApiResponseForgotPass({\n              isActive: true,\n              isError: true,\n              message: \"No account found with given email id.\",\n            });\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          setApiResponseForgotPass({\n            isActive: true,\n            isError: true,\n            message: \"An error occured. Please try again\",\n          });\n        })\n        .finally(() => {\n          setIsLoading(false);\n        });\n    } catch (err) {\n      let errs = {};\n\n      err.inner.forEach((er) => {\n        errs[er.path] = er;\n      });\n\n      console.log(err);\n      setErrorEmailForgotPass(errs);\n    }\n  }\n\n  return (\n    <div className={style.wrapper}>\n\n      <div className={style.inner}>\n\n        <div className={style.left}>\n          <img src={LoginImg} alt=\"\" />\n        </div>\n\n        <div className={style.right}>\n\n          <div className={style.registerButton}>\n            Remembered? &nbsp; Back to {\" \"}\n            <span onClick={handleClickLogin}>&nbsp; Login</span>\n          </div>\n          <div className={style.text}>Forgot Your Password?</div>\n          <div className={style.subtext}>\n            No worries. Just enter your registered email, and we'll guide you\n            through the process.\n          </div>\n\n          <Formik initialValues={{ email: \"\" }} validationSchema={validationSchema} onSubmit={submitForm}>\n            {({ handleSubmit }) => (\n              <form onChange={handleChangeFormForgotPass} onSubmit={handleSubmit}>\n\n                <div className={style.textGroup}>\n                  <div className={style.row}>\n                    <InputLabel htmlFor=\"username\" className={style.label}>Enter your registered email</InputLabel>\n                    <TextField className={style.textField} name=\"email\" label=\"email\" placeholder=\"Email\" type=\"email\" required />\n                    <p>\n                      {errorEmailForgotPass.email &&\n                        errorEmailForgotPass.email.message}\n                    </p>\n                  </div>\n                </div>\n\n                <div className={clsx(style.apiResponse, apiResponseForgotPass.isError ? style.error : style.success)}>\n                  {apiResponseForgotPass.isActive && apiResponseForgotPass.message}\n                </div>\n\n                <div className={style.textGroup}>\n                  <div className={style.btnContainer}>\n                    <Button submit disabled={isLoading} options={{ width: \"299px\", height: \"55px\" }}>\n                      {isLoading ? (<InlineLoader size={20} color=\"white\" />) : (\"Reset Password\")}\n                    </Button>\n                  </div>\n                </div>\n\n              </form>\n            )}\n          </Formik>\n        </div>\n      </div>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"NewCandidate_wrapper__KkEyy\",\"loaderWrapper\":\"NewCandidate_loaderWrapper__4AH9g\",\"card\":\"NewCandidate_card__JALZE\",\"header\":\"NewCandidate_header__RQLys\",\"row\":\"NewCandidate_row__k9aAh\",\"textField\":\"NewCandidate_textField__iqusj\",\"selectField\":\"NewCandidate_selectField__U1tAU\",\"error\":\"NewCandidate_error__Vepv4\",\"oldPassError\":\"NewCandidate_oldPassError__I+Xlc\"};","import Button from \"components/shared/Button\";\nimport InlineLoader from \"components/shared/InlineLoader\";\nimport TextField from \"components/shared/formik/TextField\";\nimport { Formik } from \"formik\";\nimport { useEffect, useState } from \"react\";\nimport Select from \"react-select\";\nimport { putRequest } from \"utils/api\";\nimport * as yup from \"yup\";\nimport style from \"./NewCandidate.module.scss\";\n\nconst _ArrLangs = [\n  { label: \"English\", value: \"EN\" }\n];\n\nexport default function NewCandidate() {\n  const [isLoading, setIsLoading] = useState();\n  const [formData, setFormData] = useState({ pref_language: \"\" });\n\n  const [isEmptyLanguage, setIsEmptyLanguage] = useState(false);\n  const [incorrectOldPass, setIncorrectOldPass] = useState(false);\n\n  function changeFormData(e) {\n    const { name, value } = e.target;\n\n    if (name === \"pref_language\") setIsEmptyLanguage(false);\n    setFormData((prev) => ({ ...prev, [name]: value }));\n  }\n\n  function submitForm() {\n    if (!formData.pref_language.length) return setIsEmptyLanguage(true);\n\n    setIsLoading(true);\n    putRequest(`/accounts/update`, formData)\n      .then((resp) => {\n        window.location.reload();\n      })\n      .catch((err) => {\n        if (err.response.status === 400) {\n          if (err.response.data.old_password) {\n            setIncorrectOldPass(true);\n          }\n        } else console.log(err);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }\n\n  const validationSchema = yup.object().shape({\n    old_password: yup.string().required(\"* Required\"),\n    new_password: yup.string().required(\"* Required\"),\n    first_name: yup.string().required(\"* Required\"),\n    last_name: yup.string().required(\"* Required\"),\n  });\n\n  const [colorStyles, setColorStyles] = useState({});\n\n  function handleResize() {\n    if (window.innerWidth < 600) {\n      setColorStyles({\n        container: (styles, { isFocused }) => ({\n          ...styles,\n          borderColor: \"transparent !important\",\n        }),\n        placeholder: (styles) => {\n          return {\n            ...styles,\n            color: \"#a6a6a6\",\n          };\n        },\n        control: (styles, { isFocused }) => ({\n          ...styles,\n          borderColor: \"#e6e6e6 !important\",\n          fontSize: \"14px\",\n          backgroundColor: \"white\",\n          width: \"100%\",\n          minHeight: \"0px\",\n          height: \"50px\",\n          borderRadius: \"15px\",\n          cursor: \"pointer\",\n          boxShadow: \"0 0 6px 0 rgba(0, 0, 0, 0.1) !important\",\n          paddingLeft: \"10px\",\n        }),\n        option: (styles, { isSelected }) => ({\n          ...styles,\n          backgroundColor: isSelected ? \"#9558C8\" : \"white\",\n          cursor: \"pointer\",\n          \"&:hover\": {\n            backgroundColor: \"#bfa0d9\",\n          },\n        }),\n        input: (styles) => ({ ...styles, color: \"transparent\" }),\n      });\n    } else {\n      setColorStyles({\n        container: (styles, { isFocused }) => ({\n          ...styles,\n          borderColor: \"transparent !important\",\n        }),\n        placeholder: (styles) => {\n          return {\n            ...styles,\n            color: \"#a6a6a6\",\n          };\n        },\n        control: (styles, { isFocused }) => ({\n          ...styles,\n          borderColor: \"#f0f0f0 !important\",\n          fontSize: \"14px\",\n          backgroundColor: \"white\",\n          width: \"calc(50% - 30px)\",\n          minHeight: \"0px\",\n          height: \"50px\",\n          borderRadius: \"15px\",\n          cursor: \"pointer\",\n          boxShadow: \"0 0 6px 0 rgba(0, 0, 0, 0.1) !important\",\n          paddingLeft: \"10px\",\n        }),\n        option: (styles, { isSelected }) => ({\n          ...styles,\n          backgroundColor: isSelected ? \"#9558C8\" : \"white\",\n          cursor: \"pointer\",\n          \"&:hover\": {\n            backgroundColor: \"#bfa0d9\",\n          },\n        }),\n        input: (styles) => ({ ...styles, color: \"transparent\" }),\n      });\n    }\n  }\n\n  useEffect(() => {\n    handleResize();\n    window.addEventListener(\"resize\", handleResize);\n  }, []);\n\n  return (\n    <div className={style.wrapper}>\n      <div className={style.card}>\n        <Formik\n          initialValues={{\n            first_name: \"\",\n            last_name: \"\",\n            old_password: \"\",\n            new_password: \"\",\n          }}\n          validationSchema={validationSchema}\n          onSubmit={submitForm}\n        >\n          {({ handleSubmit }) => (\n            <form onChange={changeFormData} onSubmit={handleSubmit}>\n              <div className={style.header}>\n                <div>Hi,</div>\n                <div>Please update your profile to proceed</div>\n              </div>\n\n              <div className={style.row}>\n                <div className={style.textField}>\n                  {/* <label>First Name</label> */}\n                  <TextField\n                    className={style.textField}\n                    type=\"text\"\n                    name=\"first_name\"\n                    placeholder=\"First Name\"\n                  />\n                </div>\n\n                <div className={style.textField}>\n                  <TextField\n                    className={style.textField}\n                    type=\"text\"\n                    name=\"last_name\"\n                    placeholder=\"Last Name\"\n                  />\n                </div>\n              </div>\n\n              <div className={style.row}>\n                <div className={style.textField}>\n                  <TextField\n                    className={style.textField}\n                    type=\"password\"\n                    name=\"old_password\"\n                    placeholder=\"Old Password\"\n                  />\n                </div>\n\n                <div className={style.textField}>\n                  <TextField\n                    className={style.textField}\n                    type=\"password\"\n                    name=\"new_password\"\n                    placeholder=\"New Password\"\n                  />\n                </div>\n              </div>\n\n              <div className={style.selectField}>\n                <Select\n                  options={_ArrLangs}\n                  styles={colorStyles}\n                  placeholder=\"Select Preferred Language\"\n                  onChange={(e) => {\n                    let event = {\n                      target: { name: \"pref_language\", value: e.value },\n                    };\n                    changeFormData(event);\n                  }}\n                  components={{\n                    IndicatorSeparator: () => null,\n                    DropdownIndicator: () => null,\n                  }}\n                />\n                {isEmptyLanguage && (\n                  <div className={style.error}>{\"* Required\"}</div>\n                )}\n              </div>\n\n              {incorrectOldPass && (\n                <div className={style.error}>\n                  Old password entered is incorrect\n                </div>\n              )}\n\n              <div className={style.btnContainer}>\n                <Button\n                  submit\n                  disabled={isLoading}\n                  options={{ width: \"100px\", height: \"35px\" }}\n                >\n                  {isLoading ? (\n                    <InlineLoader size={20} color=\"white\" />\n                  ) : (\n                    \"Submit\"\n                  )}\n                </Button>\n              </div>\n            </form>\n          )}\n        </Formik>\n      </div>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"CustomLogin_wrapper__xJwIC\",\"usernameError\":\"CustomLogin_usernameError__tPHbs\",\"modalWrapper\":\"CustomLogin_modalWrapper__0MMT8\",\"title\":\"CustomLogin_title__JCS+9\",\"apiResponse\":\"CustomLogin_apiResponse__qQ5zQ\",\"success\":\"CustomLogin_success__Kkwjf\",\"error\":\"CustomLogin_error__yEkIv\",\"inner\":\"CustomLogin_inner__kCwE4\",\"left\":\"CustomLogin_left__rwpVa\",\"right\":\"CustomLogin_right__kiSV8\",\"headerContainer\":\"CustomLogin_headerContainer__pQ7ty\",\"registerButton\":\"CustomLogin_registerButton__rAY9f\",\"text\":\"CustomLogin_text__tyT8Z\",\"textFieldGroup\":\"CustomLogin_textFieldGroup__wjQjV\",\"row\":\"CustomLogin_row__qsbZZ\",\"label\":\"CustomLogin_label__VOeuR\",\"textField\":\"CustomLogin_textField__St3aw\",\"incorrectCreds\":\"CustomLogin_incorrectCreds__eNN-e\",\"checkboxContainer\":\"CustomLogin_checkboxContainer__W1QAY\",\"btnContainer\":\"CustomLogin_btnContainer__+3uto\",\"subtext\":\"CustomLogin_subtext__L2fSV\",\"logoContainer\":\"CustomLogin_logoContainer__MBdRK\"};","import CareerTestLogo from \"assets/images/main/02.png.svg\";\nimport clsx from \"clsx\";\nimport Button from \"components/shared/Button\";\nimport Checkbox from \"components/shared/Checkbox\";\nimport InlineLoader from \"components/shared/InlineLoader\";\nimport TextField from \"components/shared/formik/TextField\";\nimport { useUserContext } from \"contexts/AllContexts\";\nimport { Formik } from \"formik\";\nimport { useEffect, useState } from \"react\";\nimport { Eye, EyeOff } from \"react-feather\";\nimport { useNavigate, useParams, useSearchParams } from \"react-router-dom\";\nimport { getRequest, postRequest } from \"utils/api\";\nimport * as yup from \"yup\";\nimport style from \"./CustomLogin.module.scss\";\n\nexport default function CustomLogin() {\n  const { slug } = useParams();\n\n  const [formData, setFormData] = useState({});\n  const [isRemember, setIsRemember] = useState(false);\n  const [isIncorrectCreds, setIsIncorrectCreds] = useState(false);\n  const [passwordType, setPasswordType] = useState(\"password\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [isErrorUsername, setIsErrorUsername] = useState(false);\n\n  const [org, setOrg] = useState(null);\n\n  const userContext = useUserContext();\n  const navigate = useNavigate();\n\n  const [searchParams] = useSearchParams();\n\n  function handleClickRegister() {\n    navigate(\"/auth/register\");\n  }\n  function handleForgotPassword() {\n    navigate(\"/auth/forgotpassword\");\n  }\n\n  function changeFormData(e) {\n    let { name, value } = e.target;\n\n    if (name === \"rememberMe\") setIsRemember(e.target.checked);\n    else {\n      if (name === \"username\") {\n        setIsErrorUsername(false);\n        value = value.replace(/\\s/g, \"\");\n        /* value = value.replace(/_/g, \"\").substring(3); */\n      }\n\n      setFormData((prev) => ({ ...prev, [name]: value }));\n    }\n  }\n\n  const validationSchema = yup.object().shape({\n    password: yup.string().required(\"* Password is required\"),\n  });\n\n  function handleClickEye() {\n    setPasswordType((prev) => (prev === \"password\" ? \"text\" : \"password\"));\n  }\n\n  function submitForm() {\n    const emailPattern = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\n    if (!emailPattern.test(formData.username)) {\n      return setIsErrorUsername(true);\n    }\n\n    setIsIncorrectCreds(false);\n    setIsLoading(true);\n\n    postRequest(\"/accounts/login\", formData, { noAuth: true })\n      .then((resp) => {\n        if (isRemember) {\n          localStorage.setItem(\"accessToken\", resp.data.access);\n          localStorage.setItem(\"refreshToken\", resp.data.refresh);\n        } else {\n          sessionStorage.setItem(\"accessToken\", resp.data.access);\n          sessionStorage.setItem(\"refreshToken\", resp.data.refresh);\n        }\n\n        getRequest(`/accounts/profile`)\n          .then((resp) => {\n            userContext.getProfile();\n\n            if (searchParams.get(\"to\")) {\n              return (window.location.href = `/${searchParams.get(\"to\")}`);\n            } else {\n              return navigate(\"/dashboard\");\n            }\n          })\n          .catch((err) => {\n            console.error(err);\n          })\n          .finally(() => {\n            setIsLoading(false);\n          });\n      })\n      .catch((err) => {\n        console.error(err);\n\n        if (err.response.status === 401) {\n          setIsIncorrectCreds(true);\n          setIsLoading(false);\n        }\n      })\n      .finally(() => {});\n  }\n\n  async function handleFetchOrg() {\n    try {\n      const res = await getRequest(`/vendors/page/info/${slug}`, {\n        noAuth: true,\n      });\n\n      setOrg(res.data);\n    } catch {\n    } finally {\n    }\n  }\n\n  useEffect(() => {\n    handleFetchOrg();\n  }, [slug]);\n\n  return (\n    <div className={style.wrapper}>\n      <div className={style.inner}>\n        <div style={{ flexDirection: \"column\" }} className={style.left}>\n          {/* <img src={LoginImg} alt=\"\" /> */}\n          <div>\n            <div>\n              <img\n                style={{ maxWidth: \"250px\" }}\n                src={org?.page_logo || CareerTestLogo}\n                alt=\"profile\"\n              />\n            </div>\n            <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n              <p\n                style={{ fontSize: \"26px\", color: \"#3d92ed\", fontWeight: 500, marginTop: '10px' }}\n                className={style.text1}\n              >\n                {org?.page_heading || \"Heading Here\"} | CareerTest.ai\n              </p>\n              <p className={style.text2} style={{ marginTop: \"10px\" }}>\n                Welcome to CareerTest.ai\n              </p>\n              <p className={style.text3}>\n                {org?.page_description || \"message will be displayed here.\"}\n              </p>\n            </div>\n          </div>\n        </div>\n        <div className={style.right}>\n          <div className={style.headerContainer}>\n            <div className={style.registerButton}>\n              New User? &nbsp; &nbsp;\n              <span onClick={handleClickRegister}>Create an Account</span>\n            </div>\n          </div>\n\n          <div\n            style={{\n              background: \"white\",\n              borderRadius: \"16px\",\n              padding: \"30px 30px\",\n              boxShadow: \"-5px 10px 35px grey\",\n            }}\n          >\n            <h1 style={{ marginBottom: \"20px\" }}>Sign In</h1>\n            <Formik\n              initialValues={{\n                username: \"\",\n                password: \"\",\n              }}\n              validationSchema={validationSchema}\n              onSubmit={submitForm}\n            >\n              {({ handleSubmit }) => (\n                <form onChange={changeFormData} onSubmit={handleSubmit}>\n                  <div className={style.textFieldGroup}>\n                    <div className={style.row}>\n                      <label htmlFor=\"username\" className={style.label}>\n                        Email ID\n                      </label>\n\n                      <TextField\n                        className={style.textField}\n                        name=\"username\"\n                        label=\"Username\"\n                        placeholder=\"tony@example.com\"\n                        type=\"email\"\n                      />\n                    </div>\n                    {isErrorUsername && (\n                      <div className={clsx(style.error, style.usernameError)}>\n                        *Enter Valid Username\n                      </div>\n                    )}\n\n                    <div className={style.row}>\n                      <label htmlFor=\"password\" className={style.label}>\n                        Password\n                      </label>\n\n                      {passwordType == \"text\" ? (\n                        <Eye onClick={handleClickEye} color=\"#C0BDCC\" />\n                      ) : (\n                        <EyeOff color=\"#C0BDCC\" onClick={handleClickEye} />\n                      )}\n                      <TextField\n                        className={style.textField}\n                        type={passwordType}\n                        name=\"password\"\n                        label=\"User Id\"\n                        placeholder=\"Password\"\n                      />\n                    </div>\n                  </div>\n                  {isIncorrectCreds && (\n                    <div className={style.incorrectCreds}>\n                      Incorrect Credentials\n                    </div>\n                  )}\n                  <div className={style.checkboxContainer}>\n                    <Checkbox\n                      name=\"rememberMe\"\n                      label=\"Remember me\"\n                      fontColor=\"#969696\"\n                    />\n                    <div onClick={handleForgotPassword}>Forgot Password ?</div>\n                  </div>\n\n                  <div className={style.btnContainer}>\n                    <Button\n                      submit\n                      disabled={isLoading}\n                      options={{\n                        width: \"299px\",\n                        height: \"55px\",\n                        borderRadius: \"60px\",\n                      }}\n                    >\n                      {isLoading ? (\n                        <InlineLoader size={20} color=\"white\" />\n                      ) : (\n                        \"Login\"\n                      )}\n                    </Button>\n                  </div>\n                </form>\n              )}\n            </Formik>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import Login from \"components/auth/Login\";\nimport Register from \"components/auth/Register\";\nimport Navbar from \"components/navbar/Navbar\";\nimport InlineLoader from \"components/shared/InlineLoader\";\nimport { useEffect, useState } from \"react\";\nimport { Navigate, Route, Routes } from \"react-router-dom\";\nimport { getRequest } from \"utils/api\";\nimport ForgotPassword from \"./ForgotPassword\";\nimport NewCandidate from \"./NewCandidate\";\nimport CustomLogin from \"./CustomLogin\";\n\nfunction isTokenPresent() {\n  return \"accessToken\" in localStorage || \"accessToken\" in sessionStorage;\n}\n\nexport default function Router() {\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    getRequest(`/accounts/profile`)\n      .then((resp) => {\n        if (!resp.data.is_generated) {\n          window.location.href = \"/dashboard\";\n        } else {\n          setIsLoading(false);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setIsLoading(false);\n      })\n      .finally(() => {});\n  }, []);\n\n  return (\n    <>\n      {isLoading ? (\n        <div\n          style={{\n            display: \"flex\",\n            width: \"100%\",\n            height: \"500px\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          <InlineLoader size={90} />\n        </div>\n      ) : (\n        <>\n          <Navbar background=\"white\" />\n          <Routes>\n            <Route\n              path=\"login\"\n              element={\n                isTokenPresent() ? <Navigate to=\"/dashboard\" /> : <Login />\n              }\n            />\n\n            <Route\n              path=\"/:slug/login\"\n              element={\n                isTokenPresent() ? <Navigate to=\"/dashboard\" /> : <CustomLogin />\n              }\n            />\n\n            <Route\n              path=\"register\"\n              element={\n                isTokenPresent() ? <Navigate to=\"/dashboard\" /> : <Register />\n              }\n            />\n            <Route\n              path=\"forgotpassword\"\n              element={\n                isTokenPresent() ? (\n                  <Navigate to=\"/dashboard\" />\n                ) : (\n                  <ForgotPassword />\n                )\n              }\n            />\n\n            <Route path=\"new-user\" element={<NewCandidate />} />\n          </Routes>\n        </>\n      )}\n    </>\n  );\n}\n"],"names":["Checkbox","_ref","name","label","fontColor","radius","value","_jsxs","className","style","wrapper","color","children","_jsx","type","checkmark","borderRadius","Login","formData","setFormData","useState","isRemember","setIsRemember","isIncorrectCreds","setIsIncorrectCreds","passwordType","setPasswordType","isLoading","setIsLoading","isErrorUsername","setIsErrorUsername","userContext","useUserContext","navigate","useNavigate","searchParams","useSearchParams","handleForgotPassword","changeFormData","e","target","checked","replace","prev","validationSchema","yup","shape","password","required","handleClickEye","isOpenForgetPassModal","setIsOpenForgetPassModal","emailForgotPass","setEmailForgotPass","errorEmailForgotPass","setErrorEmailForgotPass","apiResponseForgotPass","setApiResponseForgotPass","isActive","isError","message","inner","left","src","LoginImg","alt","right","headerContainer","registerButton","onClick","text","Formik","initialValues","username","onSubmit","test","postRequest","noAuth","then","resp","localStorage","setItem","data","access","refresh","sessionStorage","getRequest","getProfile","get","window","location","href","concat","catch","err","console","log","finally","response","status","handleSubmit","onChange","textGroup","row","htmlFor","TextField","textField","placeholder","clsx","error","usernameError","Eye","EyeOff","incorrectCreds","checkboxContainer","link","btnContainer","Button","submit","disabled","options","width","height","InlineLoader","size","_ArrSelectors","title","radioSize","getDepartment","dept","Register","preEmail","selected","setSelected","themePurple","CustomRadio","withStyles","root","props","Radio","showPassword","setShowPassword","showConfirmPass","setShowConfirmPass","isErrorDept","setIsErrorDept","isErrorLang","setIsErrorLang","postErrors","setPostErrors","full_name","email","confirm_password","pref_lang","toggleShowPassword","toggleShowConfirmPass","handleChangeRadioSelect","handleChange","max","min","oneOf","mainCard","RegisterImg","alreadyRegistered","welcome","deptError","length","first_name","last_name","split","postData","password2","department","pref_language","values","errors","touched","handleBlur","firstName","map","toLowerCase","row1","svg1","svg2","RadioGroup","selectors","sel","index","selector1","selector2","selector3","selector","body","checkbox","agreeText","ForgotPassword","handleChangeFormForgotPass","subtext","res","toast","success","icon","InputLabel","apiResponse","_ArrLangs","NewCandidate","isEmptyLanguage","setIsEmptyLanguage","incorrectOldPass","setIncorrectOldPass","old_password","new_password","colorStyles","setColorStyles","handleResize","innerWidth","container","styles","isFocused","borderColor","control","_ref2","fontSize","backgroundColor","minHeight","cursor","boxShadow","paddingLeft","option","_ref3","isSelected","input","_ref4","_ref5","_ref6","useEffect","addEventListener","card","putRequest","reload","_ref7","header","selectField","Select","components","IndicatorSeparator","DropdownIndicator","CustomLogin","slug","useParams","org","setOrg","async","handleFetchOrg","flexDirection","maxWidth","page_logo","CareerTestLogo","display","fontWeight","marginTop","text1","page_heading","text2","text3","page_description","background","padding","marginBottom","textFieldGroup","isTokenPresent","Router","is_generated","_Fragment","justifyContent","alignItems","Navbar","Routes","Route","path","element","Navigate","to"],"sourceRoot":""}